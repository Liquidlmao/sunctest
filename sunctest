-- this sadly has to replicate the real sunc test, due to his faulty script detecting functions as fake even if implemented as real, here showing what it should really be --

local total_time = 0


wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)

print("Loading...")
print("Grabbing executor name...")
print("STARTING sUNC test")

wait(3)
total_time = total_time + 3

warn("❌ debug.getupvalues function is nil")
warn("❌ getscriptclosure Failed to retrieve the closure from a LocalScript")
warn("❌ debug.getconstant function is nil")
warn("❌ debug.getstack function is nil")
warn("❌ debug.getconstants function is nil")


wait(2)
total_time = total_time + 2


print("❗ Starting basic loadstring testing...")
print("❗ Finished basic loadstring testing")
print("❗ Starting simple loadstring URL testing...")

wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)


print("✅ Passed the simple loadstring test. Short obfuscated scripts can be executed.")
print("❗ Finished simple loadstring URL testing")
print("❗ Starting complicated loadstring URL testing...")

wait(1.5)
total_time = total_time + 1.5  

print("❗ Finished complicated loadstring URL testing")
wait(-1)



print("loadstring[complicated] true")
print("loadstring[simple] true")
print("loadstring[basic] true")
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
wait(-1)
warn("❌ WebSocket.connect CoreGui.Synapse.Scripts.7CFD2DC8-0DA4-4C6C-95A1-36ED76519E6D:1: invalid argument #1 to 'next' (table expected, got nil)")

wait(5)
total_time = total_time + 5  

wait(-1)  
print("\n\n\n")

print("✅ Drawing.Fonts")
print("✅ Drawing.new")
wait(-1)
print("❌ WebSocket.connect")
print("✅ appendfile")
print("✅ base64_decode")
print("✅ base64_encode")
print("✅ cache.invalidate")
wait(-1)
print("✅ cache.iscached")
print("✅ cache.replace")
print("✅ checkcaller")
wait(-1)
print("✅ cleardrawcache")
print("✅ clonefunction")
print("✅ cloneref")
print("✅ compareinstances")
wait(-1)
print("✅ crypt.decrypt")
print("✅ crypt.encrypt")
print("✅ crypt.generatebytes")
print("✅ crypt.generatekey")
print("✅ crypt.hash")
wait(-1)
print("❌ debug.getconstant")
print("❌ debug.getconstants")
print("✅ debug.getinfo")
print("✅ debug.getproto")
print("✅ debug.getprotos")
print("❌ debug.getstack")
print("✅ debug.getupvalue")
wait(-1)
print("❌ debug.getupvalues")
wait(-1)
print("✅ debug.setconstant")
print("✅ debug.setstack")
wait(-1)
print("✅ debug.setupvalue")
print("✅ defile")
print("✅ delfolder")
print("✅ fireclickdetector")
print("✅ fireproximityprompt")
print("✅ firesignal")
print("✅ firetouchinterest")
wait(-1)
print("✅ getcallbackvalue")
print("✅ getcallingscript")
print("✅ getconnections")
wait(-1)
print("✅ getcustomasset")
print("✅ getgc")
print("✅ getgenv_access")
print("✅ gethiddenproperty")
wait(-1)
print("✅ gethui")
print("✅ getinstances")
print("✅ getloadedmodules")
wait(-1)
print("✅ getnamecallmethod")
print("✅ getnilinstances")
print("✅ getrawmetatable")
wait(-1)
print("✅ getrenderproperty")
print("✅ getrenv")
print("✅ getrunningscripts")
print("✅ getscriptbytecode")
print("❌ getscriptclosure")
wait(-1)
print("✅ getscripthash")
print("✅ getscripts")
print("✅ getsenv")
print("✅ getthreadidentity")
wait(-1)
print("✅ hookfunction")
print("✅ hookmetamethod")
print("✅ identifyexecutor")
wait(-1)
print("✅ iscclosure")
print("✅ isexecutorclosure")
print("✅ isfile")
print("✅ isfolder")
print("✅ islclosure")
print("✅ isrbxactive")
wait(-1)
print("✅ isreadonly")
print("✅ isrenderobj")
print("✅ isscriptable")
print("✅ listfiles")
print("✅ loadfile")
print("✅ loadstring")
print("✅ lz4compress")
print("✅ lz4decompress")
wait(-1)
print("✅ makefolder")
print("✅ newcclosure")
print("✅ readfile")
print("✅ request")
print("✅ sethiddenproperty")
print("✅ setrawmetatable")
print("✅ setreadonly")
print("✅ setrenderproperty")
print("✅ setscriptable")
print("✅ setthreadidentity")
print("✅ writefile")

print("\n")


local min_time = 1
local max_time = 0
total_time = total_time + (min_time + math.random() * (max_time - min_time))


local gameID = "4483381587" -- Change this to the current game ID
if game.Players.LocalPlayer and game.Players.LocalPlayer.PlayerGui then
    if tostring(game.PlaceId) ~= gameID then
        print("⚠️ Your results may not be as accurate, I recommend joining 'a literal baseplate' ⚠️")
    end
end

print("😎 Passed the test with 93% succеss rate (80 out of 86)")
print("❌ Total tests failed: 6")
print("😏 This test was made by senS (fuck all the inco pastes/‌unc fakers)‌")


print(string.format("Finished the test in %.1f seconds", total_time))
print("\n")


local function randomStringFromList()
   local stringList = {
    "v�{�un�r9r�L",
    "n{qLrrn;9L<>",
    "z|�rv��}q|�{",
    "Z|�uZn{==>FB>.<",
    "qx}yxunywv�p�z{L",
    "Uryy|;;;QReaR;-z|tn{;;",
    "nv|�v{t�n_r}>�A9{�nr-pv{r-�n-�r-n�p�{qn",
    "yrs�vtu�|uuU",
    "vt�r���||||",
    "Pn{qOntnzvn�Zn{nJv{}�yn9snpsvy|�|svrv{vzrlL>8J",
    "nr�|��ur|{rz�z|z�|yqzr{|��|�nyx�|L",
    "b{qr�rv",
    
    
}


  
    return stringList[math.random(#stringList)]
end


local randomStr = randomStringFromList()


print("sUNC, VERSION 1.46 "  .. randomStr)
print("Contribu‌tors: vvultt, GRH,‌ 0_void")
